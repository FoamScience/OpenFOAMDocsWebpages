<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Automated API and Unit testing Docs for OpenFOAM libs â€“ Documentation</title><link>https://foamscience.github.io/OpenFOAMDocsWebpages/docs/</link><description>Recent content in Documentation on Automated API and Unit testing Docs for OpenFOAM libs</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://foamscience.github.io/OpenFOAMDocsWebpages/docs/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Example Page</title><link>https://foamscience.github.io/OpenFOAMDocsWebpages/docs/getting-started/example-page/</link><pubDate>Sat, 19 Aug 2023 00:00:00 +0000</pubDate><guid>https://foamscience.github.io/OpenFOAMDocsWebpages/docs/getting-started/example-page/</guid><description>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>This is a placeholder page. Replace it with your own content.&lt;/p>
&lt;/div>
&lt;p>Text can be &lt;strong>bold&lt;/strong>, &lt;em>italic&lt;/em>, or &lt;del>strikethrough&lt;/del>. &lt;a href="https://gohugo.io">Links&lt;/a> should be blue with no underlines (unless hovered over).&lt;/p>
&lt;p>There should be whitespace between paragraphs. Vape migas chillwave sriracha poutine try-hard distillery. Tattooed shabby chic small batch, pabst art party heirloom letterpress air plant pop-up. Sustainable chia skateboard art party banjo cardigan normcore affogato vexillologist quinoa meggings man bun master cleanse shoreditch readymade. Yuccie prism four dollar toast tbh cardigan iPhone, tumblr listicle live-edge VHS. Pug lyft normcore hot chicken biodiesel, actually keffiyeh thundercats photo booth pour-over twee fam food truck microdosing banh mi. Vice activated charcoal raclette unicorn live-edge post-ironic. Heirloom vexillologist coloring book, beard deep v letterpress echo park humblebrag tilde.&lt;/p>
&lt;p>90&amp;rsquo;s four loko seitan photo booth gochujang freegan tumeric listicle fam ugh humblebrag. Bespoke leggings gastropub, biodiesel brunch pug fashion axe meh swag art party neutra deep v chia. Enamel pin fanny pack knausgaard tofu, artisan cronut hammock meditation occupy master cleanse chartreuse lumbersexual. Kombucha kogi viral truffaut synth distillery single-origin coffee ugh slow-carb marfa selfies. Pitchfork schlitz semiotics fanny pack, ugh artisan vegan vaporware hexagon. Polaroid fixie post-ironic venmo wolf ramps &lt;strong>kale chips&lt;/strong>.&lt;/p>
&lt;blockquote>
&lt;p>There should be no margin above this first sentence.&lt;/p>
&lt;p>Blockquotes should be a lighter gray with a border along the left side in the secondary color.&lt;/p>
&lt;p>There should be no margin below this final sentence.&lt;/p>
&lt;/blockquote>
&lt;h2 id="first-header-2">First Header 2&lt;/h2>
&lt;p>This is a normal paragraph following a header. Knausgaard kale chips snackwave microdosing cronut copper mug swag synth bitters letterpress glossier &lt;strong>craft beer&lt;/strong>. Mumblecore bushwick authentic gochujang vegan chambray meditation jean shorts irony. Viral farm-to-table kale chips, pork belly palo santo distillery activated charcoal aesthetic jianbing air plant woke lomo VHS organic. Tattooed locavore succulents heirloom, small batch sriracha echo park DIY af. Shaman you probably haven&amp;rsquo;t heard of them copper mug, crucifix green juice vape &lt;em>single-origin coffee&lt;/em> brunch actually. Mustache etsy vexillologist raclette authentic fam. Tousled beard humblebrag asymmetrical. I love turkey, I love my job, I love my friends, I love Chardonnay!&lt;/p>
&lt;p>Deae legum paulatimque terra, non vos mutata tacet: dic. Vocant docuique me plumas fila quin afuerunt copia haec o neque.&lt;/p>
&lt;p>On big screens, paragraphs and headings should not take up the full container width, but we want tables, code blocks and similar to take the full width.&lt;/p>
&lt;p>Scenester tumeric pickled, authentic crucifix post-ironic fam freegan VHS pork belly 8-bit yuccie PBR&amp;amp;B. &lt;strong>I love this life we live in&lt;/strong>.&lt;/p>
&lt;h2 id="second-header-2">Second Header 2&lt;/h2>
&lt;blockquote>
&lt;p>This is a blockquote following a header. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.&lt;/p>
&lt;/blockquote>
&lt;h3 id="header-3">Header 3&lt;/h3>
&lt;pre tabindex="0">&lt;code>This is a code block following a header.
&lt;/code>&lt;/pre>&lt;p>Next level leggings before they sold out, PBR&amp;amp;B church-key shaman echo park. Kale chips occupy godard whatever pop-up freegan pork belly selfies. Gastropub Belinda subway tile woke post-ironic seitan. Shabby chic man bun semiotics vape, chia messenger bag plaid cardigan.&lt;/p>
&lt;h4 id="header-4">Header 4&lt;/h4>
&lt;ul>
&lt;li>This is an unordered list following a header.&lt;/li>
&lt;li>This is an unordered list following a header.&lt;/li>
&lt;li>This is an unordered list following a header.&lt;/li>
&lt;/ul>
&lt;h5 id="header-5">Header 5&lt;/h5>
&lt;ol>
&lt;li>This is an ordered list following a header.&lt;/li>
&lt;li>This is an ordered list following a header.&lt;/li>
&lt;li>This is an ordered list following a header.&lt;/li>
&lt;/ol>
&lt;h6 id="header-6">Header 6&lt;/h6>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>What&lt;/th>
&lt;th>Follows&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>A table&lt;/td>
&lt;td>A header&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>A table&lt;/td>
&lt;td>A header&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>A table&lt;/td>
&lt;td>A header&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr />
&lt;p>There&amp;rsquo;s a horizontal rule above and below this.&lt;/p>
&lt;hr />
&lt;p>Here is an unordered list:&lt;/p>
&lt;ul>
&lt;li>Liverpool F.C.&lt;/li>
&lt;li>Chelsea F.C.&lt;/li>
&lt;li>Manchester United F.C.&lt;/li>
&lt;/ul>
&lt;p>And an ordered list:&lt;/p>
&lt;ol>
&lt;li>Michael Brecker&lt;/li>
&lt;li>Seamus Blake&lt;/li>
&lt;li>Branford Marsalis&lt;/li>
&lt;/ol>
&lt;p>And an unordered task list:&lt;/p>
&lt;ul>
&lt;li>&lt;input checked="" disabled="" type="checkbox" /> Create a Hugo theme&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox" /> Add task lists to it&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox" /> Take a vacation&lt;/li>
&lt;/ul>
&lt;p>And a &amp;ldquo;mixed&amp;rdquo; task list:&lt;/p>
&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox" /> Pack bags&lt;/li>
&lt;li>?&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox" /> Travel!&lt;/li>
&lt;/ul>
&lt;p>And a nested list:&lt;/p>
&lt;ul>
&lt;li>Jackson 5
&lt;ul>
&lt;li>Michael&lt;/li>
&lt;li>Tito&lt;/li>
&lt;li>Jackie&lt;/li>
&lt;li>Marlon&lt;/li>
&lt;li>Jermaine&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>TMNT
&lt;ul>
&lt;li>Leonardo&lt;/li>
&lt;li>Michelangelo&lt;/li>
&lt;li>Donatello&lt;/li>
&lt;li>Raphael&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>Definition lists can be used with Markdown syntax. Definition headers are bold.&lt;/p>
&lt;dl>
&lt;dt>Name&lt;/dt>
&lt;dd>Godzilla&lt;/dd>
&lt;dt>Born&lt;/dt>
&lt;dd>1952&lt;/dd>
&lt;dt>Birthplace&lt;/dt>
&lt;dd>Japan&lt;/dd>
&lt;dt>Color&lt;/dt>
&lt;dd>Green&lt;/dd>
&lt;/dl>
&lt;hr />
&lt;p>Tables should have bold headings and alternating shaded rows.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Artist&lt;/th>
&lt;th>Album&lt;/th>
&lt;th>Year&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Michael Jackson&lt;/td>
&lt;td>Thriller&lt;/td>
&lt;td>1982&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Prince&lt;/td>
&lt;td>Purple Rain&lt;/td>
&lt;td>1984&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Beastie Boys&lt;/td>
&lt;td>License to Ill&lt;/td>
&lt;td>1986&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>If a table is too wide, it should scroll horizontally.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Artist&lt;/th>
&lt;th>Album&lt;/th>
&lt;th>Year&lt;/th>
&lt;th>Label&lt;/th>
&lt;th>Awards&lt;/th>
&lt;th>Songs&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Michael Jackson&lt;/td>
&lt;td>Thriller&lt;/td>
&lt;td>1982&lt;/td>
&lt;td>Epic Records&lt;/td>
&lt;td>Grammy Award for Album of the Year, American Music Award for Favorite Pop/Rock Album, American Music Award for Favorite Soul/R&amp;amp;B Album, Brit Award for Best Selling Album, Grammy Award for Best Engineered Album, Non-Classical&lt;/td>
&lt;td>Wanna Be Startin&amp;rsquo; Somethin&amp;rsquo;, Baby Be Mine, The Girl Is Mine, Thriller, Beat It, Billie Jean, Human Nature, P.Y.T. (Pretty Young Thing), The Lady in My Life&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Prince&lt;/td>
&lt;td>Purple Rain&lt;/td>
&lt;td>1984&lt;/td>
&lt;td>Warner Brothers Records&lt;/td>
&lt;td>Grammy Award for Best Score Soundtrack for Visual Media, American Music Award for Favorite Pop/Rock Album, American Music Award for Favorite Soul/R&amp;amp;B Album, Brit Award for Best Soundtrack/Cast Recording, Grammy Award for Best Rock Performance by a Duo or Group with Vocal&lt;/td>
&lt;td>Let&amp;rsquo;s Go Crazy, Take Me With U, The Beautiful Ones, Computer Blue, Darling Nikki, When Doves Cry, I Would Die 4 U, Baby I&amp;rsquo;m a Star, Purple Rain&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Beastie Boys&lt;/td>
&lt;td>License to Ill&lt;/td>
&lt;td>1986&lt;/td>
&lt;td>Mercury Records&lt;/td>
&lt;td>noawardsbutthistablecelliswide&lt;/td>
&lt;td>Rhymin &amp;amp; Stealin, The New Style, She&amp;rsquo;s Crafty, Posse in Effect, Slow Ride, Girls, (You Gotta) Fight for Your Right, No Sleep Till Brooklyn, Paul Revere, Hold It Now, Hit It, Brass Monkey, Slow and Low, Time to Get Ill&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr />
&lt;p>Code snippets like &lt;code>var foo = &amp;quot;bar&amp;quot;;&lt;/code> can be shown inline.&lt;/p>
&lt;p>Also, &lt;code>this should vertically align&lt;/code> &lt;del>&lt;code>with this&lt;/code>&lt;/del> &lt;del>and this&lt;/del>.&lt;/p>
&lt;p>Code can also be shown in a block element.&lt;/p>
&lt;pre tabindex="0">&lt;code>foo := &amp;#34;bar&amp;#34;;
bar := &amp;#34;foo&amp;#34;;
&lt;/code>&lt;/pre>&lt;p>Code can also use syntax highlighting.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;font-weight:bold">func&lt;/span> &lt;span style="color:#06b;font-weight:bold">main&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> input &lt;span style="color:#333">:=&lt;/span> &lt;span style="background-color:#fff0f0">`var foo = &amp;#34;bar&amp;#34;;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> lexer &lt;span style="color:#333">:=&lt;/span> lexers.&lt;span style="color:#06b;font-weight:bold">Get&lt;/span>(&lt;span style="background-color:#fff0f0">&amp;#34;javascript&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> iterator, _ &lt;span style="color:#333">:=&lt;/span> lexer.&lt;span style="color:#06b;font-weight:bold">Tokenise&lt;/span>(&lt;span style="color:#080;font-weight:bold">nil&lt;/span>, input)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> style &lt;span style="color:#333">:=&lt;/span> styles.&lt;span style="color:#06b;font-weight:bold">Get&lt;/span>(&lt;span style="background-color:#fff0f0">&amp;#34;github&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> formatter &lt;span style="color:#333">:=&lt;/span> html.&lt;span style="color:#06b;font-weight:bold">New&lt;/span>(html.&lt;span style="color:#06b;font-weight:bold">WithLineNumbers&lt;/span>())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;font-weight:bold">var&lt;/span> buff bytes.Buffer
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> formatter.&lt;span style="color:#06b;font-weight:bold">Format&lt;/span>(&lt;span style="color:#333">&amp;amp;&lt;/span>buff, style, iterator)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> fmt.&lt;span style="color:#06b;font-weight:bold">Println&lt;/span>(buff.&lt;span style="color:#06b;font-weight:bold">String&lt;/span>())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code>Long, single-line code blocks should not wrap. They should horizontally scroll if they are too long. This line should be long enough to demonstrate this.
&lt;/code>&lt;/pre>&lt;p>Inline code inside table cells should still be distinguishable.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Language&lt;/th>
&lt;th>Code&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Javascript&lt;/td>
&lt;td>&lt;code>var foo = &amp;quot;bar&amp;quot;;&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Ruby&lt;/td>
&lt;td>&lt;code>foo = &amp;quot;bar&amp;quot;{&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr />
&lt;p>Small images should be shown at their actual size.&lt;/p>
&lt;p>&lt;img src="https://upload.wikimedia.org/wikipedia/commons/thumb/9/9e/Picea_abies_shoot_with_buds%2C_Sogndal%2C_Norway.jpg/240px-Picea_abies_shoot_with_buds%2C_Sogndal%2C_Norway.jpg" alt="" />&lt;/p>
&lt;p>Large images should always scale down and fit in the content container.&lt;/p>
&lt;p>&lt;img src="https://upload.wikimedia.org/wikipedia/commons/thumb/9/9e/Picea_abies_shoot_with_buds%2C_Sogndal%2C_Norway.jpg/1024px-Picea_abies_shoot_with_buds%2C_Sogndal%2C_Norway.jpg" alt="" />&lt;/p>
&lt;p>&lt;em>The photo above of the Spruce Picea abies shoot with foliage buds: BjÃ¸rn Erik Pedersen, CC-BY-SA.&lt;/em>&lt;/p>
&lt;h2 id="components">Components&lt;/h2>
&lt;h3 id="alerts">Alerts&lt;/h3>
&lt;p>
&lt;div class="alert alert-primary" role="alert">
This is an alert.
&lt;/div>
&lt;br />
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
This is an alert with a title.
&lt;/div>
&lt;br />
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
This is an alert with a title and &lt;strong>Markdown&lt;/strong>.
&lt;/div>
&lt;br />
&lt;div class="alert alert-success" role="alert">
This is a successful alert.
&lt;/div>
&lt;br />
&lt;div class="alert alert-warning" role="alert">
This is a warning.
&lt;/div>
&lt;br />
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">Warning&lt;/h4>
This is a warning with a title.
&lt;/div>
&lt;/p>
&lt;h2 id="another-heading">Another Heading&lt;/h2>
&lt;p>Add some sections here to see how the ToC looks like. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.&lt;/p>
&lt;h3 id="this-document">This Document&lt;/h3>
&lt;p>Inguina genus: Anaphen post: lingua violente voce suae meus aetate diversi. Orbis unam nec flammaeque status deam Silenum erat et a ferrea. Excitus rigidum ait: vestro et Herculis convicia: nitidae deseruit coniuge Proteaque adiciam &lt;em>eripitur&lt;/em>? Sitim noceat signa &lt;em>probat quidem&lt;/em>. Sua longis &lt;em>fugatis&lt;/em> quidem genae.&lt;/p>
&lt;h3 id="pixel-count">Pixel Count&lt;/h3>
&lt;p>Tilde photo booth wayfarers cliche lomo intelligentsia man braid kombucha vaporware farm-to-table mixtape portland. PBR&amp;amp;B pickled cornhole ugh try-hard ethical subway tile. Fixie paleo intelligentsia pabst. Ennui waistcoat vinyl gochujang. Poutine salvia authentic affogato, chambray lumbersexual shabby chic.&lt;/p>
&lt;h3 id="contact-info">Contact Info&lt;/h3>
&lt;p>Plaid hell of cred microdosing, succulents tilde pour-over. Offal shabby chic 3 wolf moon blue bottle raw denim normcore poutine pork belly.&lt;/p>
&lt;h3 id="external-links">External Links&lt;/h3>
&lt;p>Stumptown PBR&amp;amp;B keytar plaid street art, forage XOXO pitchfork selvage affogato green juice listicle pickled everyday carry hashtag. Organic sustainable letterpress sartorial scenester intelligentsia swag bushwick. Put a bird on it stumptown neutra locavore. IPhone typewriter messenger bag narwhal. Ennui cold-pressed seitan flannel keytar, single-origin coffee adaptogen occupy yuccie williamsburg chillwave shoreditch forage waistcoat.&lt;/p>
&lt;pre tabindex="0">&lt;code>This is the final element on the page and there should be no margin below this.
&lt;/code>&lt;/pre></description></item><item><title>Docs: Installation</title><link>https://foamscience.github.io/OpenFOAMDocsWebpages/docs/getting-started/installation/</link><pubDate>Thu, 01 Aug 2024 00:00:00 +0000</pubDate><guid>https://foamscience.github.io/OpenFOAMDocsWebpages/docs/getting-started/installation/</guid><description>
&lt;h2 id="prerequisites">Prerequisites&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/standardese/standardese">Standardese&lt;/a>, which we commend you compile from source.&lt;/li>
&lt;li>An &lt;a href="https://github.com/gohugoio/hugo/releases">Extended Hugo&lt;/a> version (newer than v 0.110.0)&lt;/li>
&lt;li>&lt;a href="https://github.com/rizsotto/Bear">Bear&lt;/a> for generating compilation database while compiling the code.&lt;/li>
&lt;li>Whatever the &lt;a href="https://github.com/FoamScience/OpenFOAMDocsWebpages/tree/main/scripts/requirements.txt">requirements&lt;/a> file specifies&lt;/li>
&lt;li>&lt;a href="https://github.com/FoamScience/foamUT">foamUT&lt;/a> if you want to include docs for unit tests.&lt;/li>
&lt;/ul>
&lt;p>You may take a look at the &lt;a href="">Apptainer definition file&lt;/a> for a quick inspiration on how to install everything that is needed.&lt;/p>
&lt;h2 id="get-a-copy-of-the-odw-repository">Get a copy of the ODW repository&lt;/h2>
&lt;p>You can either use the original &lt;a href="https://github.com/FoamScience/OpenFOAMDocsWebpages">ODW&lt;/a> as a Template repository, or just fork it the usual way.&lt;/p>
&lt;h2 id="apptainer-containers">Apptainer containers&lt;/h2>
&lt;p>If you want to try this out but don&amp;rsquo;t want to bloat your local environment with software that you might not use, we provide an option to build an apptainer container for generating and rendering the documentation website:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>git clone https://github.com/FoamScience/openfoam-apptainer-packaging /tmp/of_tainers
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git clone https://github.com/FoamScience/OpenFOAMDocsWebpages /tmp/odw
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">cd&lt;/span> /tmp/odw
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ansible-playbook /tmp/of_tainers/build.yaml --extra-vars&lt;span style="color:#333">=&lt;/span>&lt;span style="background-color:#fff0f0">&amp;#34;original_dir=&lt;/span>&lt;span style="color:#963">$PWD&lt;/span>&lt;span style="background-color:#fff0f0">&amp;#34;&lt;/span> --extra-vars&lt;span style="color:#333">=&lt;/span>&lt;span style="background-color:#fff0f0">&amp;#34;@build/config.yaml&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#888"># To generate the API docs&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>apptainer run containers/projects/odw*.sif &lt;span style="background-color:#fff0f0">&amp;#34;DOCS_DIR=&lt;/span>&lt;span style="color:#963">$PWD&lt;/span>&lt;span style="background-color:#fff0f0"> ./scripts/docs api &amp;amp;&amp;amp; hugo server&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#888"># Run the following to know more:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>apptainer run containers/projects/odw*.sif &lt;span style="background-color:#fff0f0">&amp;#34;jq &amp;#39;.&amp;#39; /apps.json&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Docs: API docs generation</title><link>https://foamscience.github.io/OpenFOAMDocsWebpages/docs/getting-started/api-docs/</link><pubDate>Thu, 01 Aug 2024 00:00:00 +0000</pubDate><guid>https://foamscience.github.io/OpenFOAMDocsWebpages/docs/getting-started/api-docs/</guid><description>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>API documentation (somewhat) relies on in-comments documentation written by the developer, but &lt;code>standardese&lt;/code> seems to check it against the actual function signature to make sure the comments don&amp;rsquo;t get outdated. We think that this is still a nice compromise.&lt;/p>
&lt;/div>
&lt;p>Here is a typical workflow to generate API documentation for a repository that manages both the code and documentation website:&lt;/p>
&lt;div class="alert alert-warning" role="alert">
Note that it&amp;rsquo;s &lt;strong>not recommended&lt;/strong> to merge the actual code with the docs website. This is illustrated here just to show you how to generate API docs for the sample code provided with this repository.
&lt;/div>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#888"># Clone the repo which has the code (src/ folder, where your OpenFOAM libs should reside)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git clone https://github.com/FoamScience/OpenFOAMDocsWebpages /tmp/odw
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#888"># Move to its root folder&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">cd&lt;/span> /tmp/odw
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#888"># Source some OpenFOAM version (required)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>openfoam2406
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#888"># Compile your code, this command will have to generate a compile_commands_.json&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#888"># for each library&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>./Allwmake
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#888"># Set DOCS_DIR to the repository where the website is to be managed&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#888"># In this case, both are the same repository:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#963">DOCS_DIR&lt;/span>&lt;span style="color:#333">=&lt;/span>&lt;span style="color:#963">$PWD&lt;/span> ./scripts/docs api
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#888"># Take a look at the API docs (at localhost:1313 by default)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>hugo server
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>http://localhost:1313/api&lt;/code> page should then have three sections reflecting the sample code provided &lt;a href="https://github.com/FoamScience/OpenFOAMDocsWebpages/tree/main/src">here&lt;/a>:&lt;/p>
&lt;ul>
&lt;li>Entities, listing all of your name-spaced code entities. This page is particularly useful with the search functionality turned on in your &lt;code>hugo.toml&lt;/code>&lt;/li>
&lt;li>Header files, documentation each &amp;ldquo;important file&amp;rdquo;. This feature is still work-in-progress in terms of what files to pick.&lt;/li>
&lt;li>&lt;code>Standardese&lt;/code> Modules.&lt;/li>
&lt;/ul>
&lt;div class="alert alert-warning" role="alert">
It might not be this easy for your own code. What this actually does is to try and partially compile your code with &lt;a href="https://clang.llvm.org/doxygen/group__CINDEX.html">clang&lt;/a> to figure out your AST. For it to work, your code needs to compile with clang.
&lt;/div>
&lt;p>The provided sample code is compiled with the following &lt;code>Allwmake&lt;/code> script. Note that it is important to generate &lt;code>compile_commands.json&lt;/code> for each library so that &lt;code>standardese&lt;/code> can get hold of all the included header files:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#579">#!/bin/sh
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#579">&lt;/span>&lt;span style="color:#007020">cd&lt;/span> &lt;span style="background-color:#fff0f0">&amp;#34;&lt;/span>&lt;span style="background-color:#eee">${&lt;/span>&lt;span style="color:#963">0&lt;/span>%/*&lt;span style="background-color:#eee">}&lt;/span>&lt;span style="background-color:#fff0f0">&amp;#34;&lt;/span> &lt;span style="color:#333">||&lt;/span> &lt;span style="color:#007020">exit&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>wclean src/lib1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">cd&lt;/span> src/lib1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bear -- wmake libso
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">cd&lt;/span> -
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>wclean src/lib2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">cd&lt;/span> src/lib1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bear -- wmake libso
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">cd&lt;/span> -
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>On the API pages, and on most of the other pages, we keep information about who wrote the code and documentation through &lt;code>@owner&lt;/code> tag in inline comments. Add yourself to &lt;a href="https://github.com/FoamScience/OpenFOAMDocsWebpages/tree/main/content/en/contributors">contributers&lt;/a> by adding a folder with your name there that has a &lt;code>_index.md&lt;/code> holding your metadata and a short bio if you like. Blog post authors must be specified explicitly in the front matter, and we don&amp;rsquo;t track authors for the Getting-Started/User-Guide section - but that information is still available through git if you ever need it.&lt;/p></description></item><item><title>Docs: Unit-tests docs generation</title><link>https://foamscience.github.io/OpenFOAMDocsWebpages/docs/getting-started/ut-docs/</link><pubDate>Thu, 01 Aug 2024 00:00:00 +0000</pubDate><guid>https://foamscience.github.io/OpenFOAMDocsWebpages/docs/getting-started/ut-docs/</guid><description>
&lt;p>All the heavy-lifting is actually done bu &lt;code>foamUT&lt;/code> itself, so if you have some unit tests under &lt;code>tests/&lt;/code> folder, they will run and the output is converted over to the webpages under &lt;code>/tests&lt;/code> URL. It&amp;rsquo;s important to note that &lt;strong>your tests must compile&lt;/strong> as we cannot generate reports on tests that do not compile.&lt;/p>
&lt;p>Here is a typical workflow to generate documentation for a repository with some Unit tests:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#888"># Clone the repo which has the code (src/ and test/ folder, where your OpenFOAM libs should reside)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git clone https://github.com/FoamScience/OpenFOAMDocsWebpages /tmp/odw
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#888"># Get a temporary clone of foamUT&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git clone https://github.com/FoamScience/foamUT /tmp/ut
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#888"># Move to its root folder&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">cd&lt;/span> /tmp/odw
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#888"># Source some OpenFOAM version (required)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>openfoam2406
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#888"># Compile your libraries -- don&amp;#39;t forget this important step&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>./Allwmake
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#888"># Set DOCS_DIR to the repository where the website is to be managed&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#888"># In this case, both are the same repository,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#888"># also, point to where foamUT repo is located:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#963">DOCS_DIR&lt;/span>&lt;span style="color:#333">=&lt;/span>&lt;span style="color:#963">$PWD&lt;/span> &lt;span style="color:#963">FOAM_FOAMUT&lt;/span>&lt;span style="color:#333">=&lt;/span>/tmp/ut ./scripts/docs ut
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#888"># Take a look at the unit-tests docs page (at localhost:1313 by default)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>hugo server
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>http://localhost:1313/tests&lt;/code> page should then have reports on all unit-testing cases. For now, only serial runs are reported but supporting parallel tests is planned.&lt;/p>
&lt;div class="alert alert-success" role="alert">
If your unit-testing workflow requires the addition of custom OpenFOAM cases to perform tests on (i.e. &lt;code>testCases/&lt;/code> exists), the docs script will automatically pick those up instead of the default cavity provided by &lt;code>foamUT&lt;/code>.
&lt;/div></description></item></channel></rss>