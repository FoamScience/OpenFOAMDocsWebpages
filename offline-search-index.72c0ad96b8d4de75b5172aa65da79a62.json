[{"body":" This is a placeholder page. Replace it with your own content.\nText can be bold, italic, or strikethrough. Links should be blue with no underlines (unless hovered over).\nThere should be whitespace between paragraphs. Vape migas chillwave sriracha poutine try-hard distillery. Tattooed shabby chic small batch, pabst art party heirloom letterpress air plant pop-up. Sustainable chia skateboard art party banjo cardigan normcore affogato vexillologist quinoa meggings man bun master cleanse shoreditch readymade. Yuccie prism four dollar toast tbh cardigan iPhone, tumblr listicle live-edge VHS. Pug lyft normcore hot chicken biodiesel, actually keffiyeh thundercats photo booth pour-over twee fam food truck microdosing banh mi. Vice activated charcoal raclette unicorn live-edge post-ironic. Heirloom vexillologist coloring book, beard deep v letterpress echo park humblebrag tilde.\n90’s four loko seitan photo booth gochujang freegan tumeric listicle fam ugh humblebrag. Bespoke leggings gastropub, biodiesel brunch pug fashion axe meh swag art party neutra deep v chia. Enamel pin fanny pack knausgaard tofu, artisan cronut hammock meditation occupy master cleanse chartreuse lumbersexual. Kombucha kogi viral truffaut synth distillery single-origin coffee ugh slow-carb marfa selfies. Pitchfork schlitz semiotics fanny pack, ugh artisan vegan vaporware hexagon. Polaroid fixie post-ironic venmo wolf ramps kale chips.\nThere should be no margin above this first sentence.\nBlockquotes should be a lighter gray with a border along the left side in the secondary color.\nThere should be no margin below this final sentence.\nFirst Header 2 This is a normal paragraph following a header. Knausgaard kale chips snackwave microdosing cronut copper mug swag synth bitters letterpress glossier craft beer. Mumblecore bushwick authentic gochujang vegan chambray meditation jean shorts irony. Viral farm-to-table kale chips, pork belly palo santo distillery activated charcoal aesthetic jianbing air plant woke lomo VHS organic. Tattooed locavore succulents heirloom, small batch sriracha echo park DIY af. Shaman you probably haven’t heard of them copper mug, crucifix green juice vape single-origin coffee brunch actually. Mustache etsy vexillologist raclette authentic fam. Tousled beard humblebrag asymmetrical. I love turkey, I love my job, I love my friends, I love Chardonnay!\nDeae legum paulatimque terra, non vos mutata tacet: dic. Vocant docuique me plumas fila quin afuerunt copia haec o neque.\nOn big screens, paragraphs and headings should not take up the full container width, but we want tables, code blocks and similar to take the full width.\nScenester tumeric pickled, authentic crucifix post-ironic fam freegan VHS pork belly 8-bit yuccie PBR\u0026B. I love this life we live in.\nSecond Header 2 This is a blockquote following a header. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nHeader 3 This is a code block following a header. Next level leggings before they sold out, PBR\u0026B church-key shaman echo park. Kale chips occupy godard whatever pop-up freegan pork belly selfies. Gastropub Belinda subway tile woke post-ironic seitan. Shabby chic man bun semiotics vape, chia messenger bag plaid cardigan.\nHeader 4 This is an unordered list following a header. This is an unordered list following a header. This is an unordered list following a header. Header 5 This is an ordered list following a header. This is an ordered list following a header. This is an ordered list following a header. Header 6 What Follows A table A header A table A header A table A header There’s a horizontal rule above and below this.\nHere is an unordered list:\nLiverpool F.C. Chelsea F.C. Manchester United F.C. And an ordered list:\nMichael Brecker Seamus Blake Branford Marsalis And an unordered task list:\nCreate a Hugo theme Add task lists to it Take a vacation And a “mixed” task list:\nPack bags ? Travel! And a nested list:\nJackson 5 Michael Tito Jackie Marlon Jermaine TMNT Leonardo Michelangelo Donatello Raphael Definition lists can be used with Markdown syntax. Definition headers are bold.\nName Godzilla Born 1952 Birthplace Japan Color Green Tables should have bold headings and alternating shaded rows.\nArtist Album Year Michael Jackson Thriller 1982 Prince Purple Rain 1984 Beastie Boys License to Ill 1986 If a table is too wide, it should scroll horizontally.\nArtist Album Year Label Awards Songs Michael Jackson Thriller 1982 Epic Records Grammy Award for Album of the Year, American Music Award for Favorite Pop/Rock Album, American Music Award for Favorite Soul/R\u0026B Album, Brit Award for Best Selling Album, Grammy Award for Best Engineered Album, Non-Classical Wanna Be Startin’ Somethin’, Baby Be Mine, The Girl Is Mine, Thriller, Beat It, Billie Jean, Human Nature, P.Y.T. (Pretty Young Thing), The Lady in My Life Prince Purple Rain 1984 Warner Brothers Records Grammy Award for Best Score Soundtrack for Visual Media, American Music Award for Favorite Pop/Rock Album, American Music Award for Favorite Soul/R\u0026B Album, Brit Award for Best Soundtrack/Cast Recording, Grammy Award for Best Rock Performance by a Duo or Group with Vocal Let’s Go Crazy, Take Me With U, The Beautiful Ones, Computer Blue, Darling Nikki, When Doves Cry, I Would Die 4 U, Baby I’m a Star, Purple Rain Beastie Boys License to Ill 1986 Mercury Records noawardsbutthistablecelliswide Rhymin \u0026 Stealin, The New Style, She’s Crafty, Posse in Effect, Slow Ride, Girls, (You Gotta) Fight for Your Right, No Sleep Till Brooklyn, Paul Revere, Hold It Now, Hit It, Brass Monkey, Slow and Low, Time to Get Ill Code snippets like var foo = \"bar\"; can be shown inline.\nAlso, this should vertically align with this and this.\nCode can also be shown in a block element.\nfoo := \"bar\"; bar := \"foo\"; Code can also use syntax highlighting.\nfunc main() { input := `var foo = \"bar\";` lexer := lexers.Get(\"javascript\") iterator, _ := lexer.Tokenise(nil, input) style := styles.Get(\"github\") formatter := html.New(html.WithLineNumbers()) var buff bytes.Buffer formatter.Format(\u0026buff, style, iterator) fmt.Println(buff.String()) } Long, single-line code blocks should not wrap. They should horizontally scroll if they are too long. This line should be long enough to demonstrate this. Inline code inside table cells should still be distinguishable.\nLanguage Code Javascript var foo = \"bar\"; Ruby foo = \"bar\"{ Small images should be shown at their actual size.\nLarge images should always scale down and fit in the content container.\nThe photo above of the Spruce Picea abies shoot with foliage buds: Bjørn Erik Pedersen, CC-BY-SA.\nComponents Alerts This is an alert. Note This is an alert with a title. Note This is an alert with a title and Markdown. This is a successful alert. This is a warning. Warning This is a warning with a title. Another Heading Add some sections here to see how the ToC looks like. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nThis Document Inguina genus: Anaphen post: lingua violente voce suae meus aetate diversi. Orbis unam nec flammaeque status deam Silenum erat et a ferrea. Excitus rigidum ait: vestro et Herculis convicia: nitidae deseruit coniuge Proteaque adiciam eripitur? Sitim noceat signa probat quidem. Sua longis fugatis quidem genae.\nPixel Count Tilde photo booth wayfarers cliche lomo intelligentsia man braid kombucha vaporware farm-to-table mixtape portland. PBR\u0026B pickled cornhole ugh try-hard ethical subway tile. Fixie paleo intelligentsia pabst. Ennui waistcoat vinyl gochujang. Poutine salvia authentic affogato, chambray lumbersexual shabby chic.\nContact Info Plaid hell of cred microdosing, succulents tilde pour-over. Offal shabby chic 3 wolf moon blue bottle raw denim normcore poutine pork belly.\nExternal Links Stumptown PBR\u0026B keytar plaid street art, forage XOXO pitchfork selvage affogato green juice listicle pickled everyday carry hashtag. Organic sustainable letterpress sartorial scenester intelligentsia swag bushwick. Put a bird on it stumptown neutra locavore. IPhone typewriter messenger bag narwhal. Ennui cold-pressed seitan flannel keytar, single-origin coffee adaptogen occupy yuccie williamsburg chillwave shoreditch forage waistcoat.\nEquations You can have inline math by enclosing equations in $ pairs or use inline math de \\\\(....\\\\): for example, $\\mu$.\nBlock math mode can be entered with either $$ pairs or \\\\[....\\\\]:\n\\[\\sum_{i=0}^{N}\\frac{f_i(x_0)}{(x_i-1)^2}\\]\nThis is the final element on the page and there should be no margin below this. ","categories":["Examples"],"description":"A short lead description about this content page. It can be **bold** or _italic_ and can be split over multiple paragraphs.\n","excerpt":"A short lead description about this content page. It can be **bold** …","ref":"/OpenFOAMDocsWebpages/docs/getting-started/example-page/","tags":["sample","docs"],"title":"Example Page"},{"body":"This page is basically a recap of what would be a user-guide on how to use ODW to generate documentation sites for your own OpenFOAM projects.\nWhat is this? We rely on Hugo static site generator to build HTML docs from Markdown files we get from standardese. This allows us to host such websites for free on multiple platforms (Github Pages being our main target).\nThe promise is that you will only have to write your docs in Markdown syntax, and you get automatic documentation updates as your code changes. Having the documentation in Markdown format also makes re-usable in a couple of other places.\nWe cannot supported full up-to-date states of the docs specifically because OpenFOAM code does not really respect this at the moment. If methods are marked with [[deprecated]], this is supposed to be reflected in the docs but it is not yet enforced in most OpenFOAM forks! So, deprecation attributes are largely ignored for now. Why would I want it? Help your users/devs know if your project will help them. We recommend answering few important questions\nin the overview page to clearly communicate the purpose and limitations of your project:\nWhat is it good for?: What types of problems does your project solve? What are the main benefits of using it?\nWhat is it not good for?: For example, point out situations that might intuitively seem suited for your project, but aren’t for some reason. Also mention known limitations if there are any.\nWhat is it not yet good for?: Highlight any useful features that are coming soon.\nWhere should I go next? We have prepared a check-list for you to go through if you decide to adapt this repository to your project:\nGet familiarized with Hugo: the important sections are “Add content” and “Configure the site”. The Example page can help you get familiarized with how you’re expected to write the markdown content. Head to Installation and set up the needed dependencies. Adapt your hugo.toml configuration file to suit your needs. Explore docs folder if you want to include a “Getting-Started” section. You are free in what structure you opt for, but we recommend to keep the time to read each page under 3-minutes. Setup the first blog post. Maybe start with announcing switching to ODW for documenting your code! Also, we recommend to exploit the discussions section to share technical updates with your community. Visit API docs generation to generate your first API docs. Visit Unit-tests docs generation to generate your first documentation for Unit-tests. An example Github workflow that deploys the website to Github Pages. Adapt the workflow file to reflect your needs (e.g. the URL to publish to). Don’t forgot to turn on Pages deployments from gh-pages branch in your repository settings. ","categories":"","description":"Here's where you finds out if this project is for you","excerpt":"Here's where you finds out if this project is for you","ref":"/OpenFOAMDocsWebpages/docs/overview/","tags":"","title":"Overview"},{"body":"Prerequisites Standardese, which we commend you compile from source. An Extended Hugo version (newer than v 0.130.0). Hugo requires Golang. Bear for generating compilation database while compiling the code. Whatever the requirements file specifies foamUT if you want to include docs for unit tests. You may take a look at the Apptainer definition file for a quick inspiration on how to install everything that is needed.\nGet a copy of the ODW repository You can either use the original ODW as a Template repository, or just fork it the usual way.\nApptainer containers If you want to try this out but don’t want to bloat your local environment with software that you might not use, we provide an option to build an apptainer container for generating and rendering the documentation website:\ngit clone https://github.com/FoamScience/openfoam-apptainer-packaging /tmp/of_tainers git clone https://github.com/FoamScience/OpenFOAMDocsWebpages /tmp/odw cd /tmp/odw ansible-playbook /tmp/of_tainers/build.yaml --extra-vars=\"original_dir=$PWD\" --extra-vars=\"@build/config.yaml\" # To generate the API docs apptainer run containers/projects/odw*.sif \"DOCS_DIR=$PWD ./scripts/docs api \u0026\u0026 hugo server\" # Run the following to know more: apptainer run containers/projects/odw*.sif \"jq '.' /apps.json\" ","categories":["Examples"],"description":"Install required dependencies and get your site up and running\n","excerpt":"Install required dependencies and get your site up and running\n","ref":"/OpenFOAMDocsWebpages/docs/getting-started/installation/","tags":["docs"],"title":"Installation"},{"body":"Check the Overview page before anything else. Then you may proceed to installing the dependencies and getting your site up and running.\n","categories":["Examples"],"description":"What do I need to do to try this out?","excerpt":"What do I need to do to try this out?","ref":"/OpenFOAMDocsWebpages/docs/getting-started/","tags":["docs"],"title":"Getting Started"},{"body":" API documentation (somewhat) relies on in-comments documentation written by the developer, but standardese seems to check it against the actual function signature to make sure the comments don’t get outdated. We think that this is still a nice compromise.\nHere is a typical workflow to generate API documentation for a repository that manages both the code and documentation website:\nNote that it’s not recommended to merge the actual code with the docs website. This is illustrated here just to show you how to generate API docs for the sample code provided with this repository. # Clone the repo which has the code (src/ folder, where your OpenFOAM libs should reside) git clone https://github.com/FoamScience/OpenFOAMDocsWebpages /tmp/odw # Move to its root folder cd /tmp/odw # Source some OpenFOAM version (required) openfoam2406 # Compile your code, this command will have to generate a compile_commands_.json # for each library ./Allwmake # Set DOCS_DIR to the repository where the website is to be managed # In this case, both are the same repository: DOCS_DIR=$PWD ./scripts/docs api # Take a look at the API docs (at localhost:1313 by default) hugo server http://localhost:1313/api page should then have three sections reflecting the sample code provided here:\nEntities, listing all of your name-spaced code entities. This page is particularly useful with the search functionality turned on in your hugo.toml Header files, documentation each “important file”. This feature is still work-in-progress in terms of what files to pick. Standardese Modules. It might not be this easy for your own code. What this actually does is to try and partially compile your code with clang to figure out your AST. For it to work, your code needs to compile with clang. The provided sample code is compiled with the following Allwmake script. Note that it is important to generate compile_commands.json for each library so that standardese can get hold of all the included header files:\n#!/bin/sh cd \"${0%/*}\" || exit wclean src/lib1 cd src/lib1 bear -- wmake libso cd - wclean src/lib2 cd src/lib1 bear -- wmake libso cd - Code Author information On the API pages, and on most of the other pages, we keep information about who wrote the code and documentation by parsing the inline comments of the documented entities, which are expected as follows:\n/// @output_section author:elwardi Then add yourself to contributers by adding a folder with your name there that has a _index.md holding your metadata and a short bio if you like. An example markdown file for an author can be consulted here: elwardi. Blog post authors must be specified explicitly in the front matter though, and we don’t track authors for the Getting-Started/User-Guide section - but that information is still available through git if you ever need it.\n","categories":["Examples"],"description":"Automated generation of docs for your classes and function signatures\n","excerpt":"Automated generation of docs for your classes and function signatures\n","ref":"/OpenFOAMDocsWebpages/docs/getting-started/api-docs/","tags":["docs"],"title":"API docs generation"},{"body":"All the heavy-lifting is actually done bu foamUT itself, so if you have some unit tests under tests/ folder, they will run and the output is converted over to the webpages under /tests URL. It’s important to note that your tests must compile as we cannot generate reports on tests that do not compile.\nHere is a typical workflow to generate documentation for a repository with some Unit tests:\n# Clone the repo which has the code (src/ and test/ folder, where your OpenFOAM libs should reside) git clone https://github.com/FoamScience/OpenFOAMDocsWebpages /tmp/odw # Get a temporary clone of foamUT git clone https://github.com/FoamScience/foamUT /tmp/ut # Move to its root folder cd /tmp/odw # Source some OpenFOAM version (required) openfoam2406 # Compile your libraries -- don't forget this important step ./Allwmake # Set DOCS_DIR to the repository where the website is to be managed # In this case, both are the same repository, # also, point to where foamUT repo is located: DOCS_DIR=$PWD FOAM_FOAMUT=/tmp/ut ./scripts/docs ut # Take a look at the unit-tests docs page (at localhost:1313 by default) hugo server http://localhost:1313/tests page should then have reports on all unit-testing cases. For now, only serial runs are reported but supporting parallel tests is planned.\nIf your unit-testing workflow requires the addition of custom OpenFOAM cases to perform tests on (i.e. testCases/ exists), the docs script will automatically pick those up instead of the default cavity provided by foamUT. ","categories":["Examples"],"description":"Automated generation of docs for your foamUT-powered unit tests\n","excerpt":"Automated generation of docs for your foamUT-powered unit tests\n","ref":"/OpenFOAMDocsWebpages/docs/getting-started/ut-docs/","tags":["docs"],"title":"Unit-tests docs generation"},{"body":"","categories":"","description":"","excerpt":"","ref":"/OpenFOAMDocsWebpages/blog/discussions/","tags":"","title":"Discussions"},{"body":"This section is where the “user documentation” lives - all the information users need to understand and successfully use the project should go under the /docs path.\nHow to write on this site? You can edit this page from the sidebar on the right. You can also abuse the “View page source” link to learn how to achieve certain styling. For example, how do you style this paragraph as a note? Naturally, there is an extensive documentation on how to use this project to produce stunning documentation webpages for your OpenFOAM libraries.\n","categories":"","description":"","excerpt":"This section is where the “user documentation” lives - all the …","ref":"/OpenFOAMDocsWebpages/docs/","tags":"","title":"Documentation"},{"body":"","categories":"","description":"","excerpt":"","ref":"/OpenFOAMDocsWebpages/blog/news/","tags":"","title":"News"},{"body":"","categories":"","description":"","excerpt":"","ref":"/OpenFOAMDocsWebpages/blog/releases/","tags":"","title":"Releases"},{"body":"","categories":"","description":"","excerpt":"","ref":"/OpenFOAMDocsWebpages/adr_tags/","tags":"","title":"Adr_tags"},{"body":"","categories":"","description":"","excerpt":"","ref":"/OpenFOAMDocsWebpages/adr_tags/applications/","tags":"","title":"applications"},{"body":"","categories":"","description":"","excerpt":"","ref":"/OpenFOAMDocsWebpages/adr_tags/backend/","tags":"","title":"backend"},{"body":"Context and Problem Statement We want to record architectural decisions made in this project independent whether decisions concern the architecture (“architectural decision record”), the code, or other fields.\nWhich format and structure should these records follow?\nConsidered Options MADR 4.0.0 – The Markdown Architectural Decision Records Michael Nygard’s template – The first incarnation of the term “ADR” Sustainable Architectural Decisions – The Y-Statements Formless – No conventions for file format and structure Decision Outcome Chosen option: A slightly Modified “MADR 4.0.0”, because\nImplicit assumptions should be made explicit.\nDesign documentation is important to enable people understanding the decisions later on.\nSee also “A rational design process: How and why to fake it”. MADR allows for structured capturing of any decision. The MADR format fits within our documentation workflow effortlessly. The format of an ADR markdown file must follow the following format:\n--- layout: adr title: ADR Title related: - Related ADR Title status: enforced # proposed, rejected, deprecated, superseded, or under-review date: 2024-11-01 decision_makers: - elwardi adr_tags: - backend - ui/ux - applications --- ## Context and Problem Statement Describe the context and problem statement in two-three sentences, ending with a question. ## Decision Drivers (optional*) - Decision driver 1 (concern, force) - Decision driver 2 (concern, force) ## Considered Options - Option 1 - Option 2 ## Decision Outcome Chosen option: {option}, because {reasons irt. decision drivers} ### Consequences (optional*) - Positive, improves this and that - Neutral, changes this and that but has no significant effects - Negative, affects this and that ### Confirmation (optional*) How to confirm compliance with decision. ## More information (optional*) Any more information clarifying components of the decision. ","categories":"","description":"","excerpt":"Context and Problem Statement We want to record architectural …","ref":"/OpenFOAMDocsWebpages/adr/0000-use-markdown-architectural-decision-records/","tags":"","title":"Use Markdown Architectural Decision Records"},{"body":"Initial work on the companion website project for documenting the design and implementation\nof my PhD project (Meshless methods in CFD applications) has been completed. The project\nis in a stable state hence made available for the wide public to use. As always, all kinds of PRs are\nvery much welcome!\n","categories":"","description":"The Docsy Hugo theme lets project maintainers and contributors focus on content, not on reinventing a website infrastructure from scratch; Standardese even generates most of that content automatically for you from your code base!\n","excerpt":"The Docsy Hugo theme lets project maintainers and contributors focus …","ref":"/OpenFOAMDocsWebpages/blog/2024/08/01/easy-api-documentation-with-hugo-and-standardese/","tags":"","title":"Easy API documentation with Hugo and Standardese"},{"body":"","categories":"","description":"","excerpt":"","ref":"/OpenFOAMDocsWebpages/categories/","tags":"","title":"Categories"},{"body":"","categories":"","description":"","excerpt":"","ref":"/OpenFOAMDocsWebpages/tags/docs/","tags":"","title":"docs"},{"body":"","categories":"","description":"","excerpt":"","ref":"/OpenFOAMDocsWebpages/categories/examples/","tags":"","title":"Examples"},{"body":"","categories":"","description":"","excerpt":"","ref":"/OpenFOAMDocsWebpages/tags/","tags":"","title":"Tags"},{"body":"This Hugo template can be used as a template to spin off new websites. Currently, I see\nno need to create releases. Just fork and clone the main branch!\n","categories":"","description":"No release policies\n","excerpt":"No release policies\n","ref":"/OpenFOAMDocsWebpages/blog/2023/08/19/no-releases/","tags":"","title":"No Releases?"},{"body":"","categories":"","description":"","excerpt":"","ref":"/OpenFOAMDocsWebpages/tags/sample/","tags":"","title":"sample"},{"body":"","categories":"","description":"","excerpt":"","ref":"/OpenFOAMDocsWebpages/tags/#sampleclasstests/","tags":"","title":"#sampleClassTests"},{"body":"This means the documentation software could not infer the contributor from the header and\nsource files. This is fine for external libraries (e.g. OpenFOAM functions) but we shouldn’t\nhave many of our own entities here!\nComment your classes and functions with the following to assign two contributors:\n/// @output-section author:elwardi class Test; Otherwise please use git to fetch commit authors for the file:\ngit shortlog -n -s -- path/to/file Here is a full list of all code entities which have no contributor assigned:\n","categories":"","description":"","excerpt":"This means the documentation software could not infer the contributor …","ref":"/OpenFOAMDocsWebpages/contributors/__missing__/","tags":"","title":"\u003cMissing\u003e"},{"body":"This means the documentation software could not infer the contributor from the header and\nsource files. This is not fine as we strive to document everything.\nComment your classes and functions with the following to assign a contributor:\n/// @output-section author:elwardi class Test; Otherwise please use git to fetch commit authors for the file and blame for the\nspecific set of lines:\ngit shortlog -n -s -- path/to/file ","categories":"","description":"","excerpt":"This means the documentation software could not infer the contributor …","ref":"/OpenFOAMDocsWebpages/contributors/__optional__/","tags":"","title":"\u003cOptional\u003e"},{"body":" About ODW OpenFOAM-Docs-Webpages (ODW) is a sample site using the Docsy\nHugo theme and standardese to generate stunning\nand actually useful documentation pages which stay up-to-date with minimal effort.\nIt’s for the lazy lots of us who write OpenFOAM code frequently and want to document it\nin a way that’s actually decent to look at and browse. Reading source code files is still\nbetter though…\nThree sections are natively supported; though there is nothing holding you back from adding more:\nAPI docs for the lazy As an alternative to Doxygen (but more feature rich), standardese can generate API docs\nas Markdown files; and consecutive docs builds do not change the content you add in the markdown file.\nIt uses libclang to parse the AST so everything that clang supports should just work. Inline comments\nare still considered as documentation but it’s not\nrecommended to fully rely on them. It’s always possible to keep important notes about the classes in dedicated\nmarkdown files (naturally with Latex support).\nWiki-like docs The same Markdown system is used also to generate pages for things like “Getting-Started” or\na “FAQ” from your markdown input.\nA Blog I usually like to keep track of how my projects evolve over time, and a DevLog is the best tool for this purpose.\nBy exposing this information to the world, someone is bound to benefit from it at some point!\n","categories":"","description":"","excerpt":" About ODW OpenFOAM-Docs-Webpages (ODW) is a sample site using the …","ref":"/OpenFOAMDocsWebpages/about/","tags":"","title":"About ODW"},{"body":"We abuse ADRs to record any activity on the repo, may it be related to architecture, design, implementation or any other aspect that affects the project’s future. ADRs are categorized by their status as follows:\nProposed ADR: written out, and was investigated Under-review ADR: reviewing viability of acceptance Enforced ADR: accepted as viable, and set in effect Rejected ADR: dropped out Deprecated ADR: was in effect, but now preparing to retire Superseded ADR: was in effect, but was replaced by another decision ","categories":"","description":"","excerpt":"We abuse ADRs to record any activity on the repo, may it be related to …","ref":"/OpenFOAMDocsWebpages/adr/","tags":["backend","ui","applications"],"title":"ADRs"},{"body":"","categories":"","description":"","excerpt":"","ref":"/OpenFOAMDocsWebpages/api_namespaces/","tags":"","title":"Api_namespaces"},{"body":"","categories":"","description":"","excerpt":"","ref":"/OpenFOAMDocsWebpages/api_tags/","tags":"","title":"Api_tags"},{"body":"","categories":"","description":"","excerpt":"","ref":"/OpenFOAMDocsWebpages/tags/applications/","tags":"","title":"applications"},{"body":"","categories":"","description":"","excerpt":"","ref":"/OpenFOAMDocsWebpages/tags/backend/","tags":"","title":"backend"},{"body":"This is the blog section. It has three categories: News, Discussions and Releases.\nFiles in these directories will be listed in reverse chronological order.\n","categories":"","description":"","excerpt":"This is the blog section. It has three categories: News, Discussions …","ref":"/OpenFOAMDocsWebpages/blog/","tags":"","title":"Blog"},{"body":"","categories":"","description":"","excerpt":"","ref":"/OpenFOAMDocsWebpages/tags/cavity/","tags":"","title":"cavity"},{"body":"","categories":"","description":"","excerpt":"","ref":"/OpenFOAMDocsWebpages/contributors/","tags":"","title":"Contributors"},{"body":" Namespace Foam coolType1 - Global typedef using using. Not a typo 👋 😂\ncoolType2 - Global typedef using typedef. Also not a typo 😉\nintConstExpr - An initialized constexpr\noperator() - Documentation and implementation defer for this function It’s supposed to return $R^{-2.5x}$ 😱\nsampleBCFvPatchField\nsampleClass - Base interface to shape objects. A shape is basically a set of “surface” patches which define regions of closed volumes. Discretization can happen on both sides of these patches if required. @note This is an inline note @warning And an inline warning\nsampleBCFvPatchField_H\nsampleBCFvPatchFields_H\n","categories":"","description":"","excerpt":" Namespace Foam coolType1 - Global typedef using using. Not a typo 👋 😂 …","ref":"/OpenFOAMDocsWebpages/api/entities/","tags":"","title":"Entities"},{"body":" lib1/sample.C\nlib1/sampleBC/sampleBCFvPatchField.C\nlib1/sampleBC/sampleBCFvPatchField.H\nlib1/sampleBC/sampleBCFvPatchFields.C\nlib1/sampleBC/sampleBCFvPatchFields.H\nlib2/sampleClass/sampleClass.C\nlib2/sampleClass/sampleClass.H\n","categories":"","description":"","excerpt":" lib1/sample.C\nlib1/sampleBC/sampleBCFvPatchField.C …","ref":"/OpenFOAMDocsWebpages/api/headers/","tags":"","title":"Header Files"},{"body":"//=== author:elwardi ===// namespace Foam { using coolType1 = int; using coolType2 = int; static constexpr int const intConstExpr = 42; } Foam::coolType1 using coolType1 = int; Global typedef using using. Not a typo 👋 😂\nFoam::coolType2 using coolType2 = int; Global typedef using typedef. Also not a typo 😉\nFoam::intConstExpr static constexpr int const intConstExpr = 42; An initialized constexpr\n","categories":"","description":"","excerpt":"//=== author:elwardi ===// namespace Foam { using coolType1 = int; …","ref":"/OpenFOAMDocsWebpages/api/doc_lib1__sample/","tags":"","title":"lib1/sample.C"},{"body":"#define sampleBCFvPatchField_H namespace Foam { //=== author:elwardi ===// template \u003cclass Type\u003e class sampleBCFvPatchField; } Foam::sampleBCFvPatchField template \u003cclass Type\u003e class sampleBCFvPatchField : public fixedValueFvPatchField\u003cType\u003e { }; ","categories":"","description":"","excerpt":"#define sampleBCFvPatchField_H namespace Foam { //=== author:elwardi …","ref":"/OpenFOAMDocsWebpages/api/doc_lib1__sampleBC__sampleBCFvPatchField/","tags":"","title":"lib1/sampleBC/sampleBCFvPatchField.H"},{"body":"#include \"sampleBCFvPatchField.H\" #define sampleBCFvPatchFields_H namespace Foam { } ","categories":"","description":"","excerpt":"#include \"sampleBCFvPatchField.H\" #define sampleBCFvPatchFields_H …","ref":"/OpenFOAMDocsWebpages/api/doc_lib1__sampleBC__sampleBCFvPatchFields/","tags":"","title":"lib1/sampleBC/sampleBCFvPatchFields.H"},{"body":"","categories":"","description":"","excerpt":"","ref":"/OpenFOAMDocsWebpages/tests/lib2/","tags":"","title":"lib2 tests"},{"body":"namespace Foam { Foam::sampleClass operator-(Foam::sampleClass\u0026 a, Foam::sampleClass\u0026 b); } Foam::operator- Foam::sampleClass operator-(Foam::sampleClass\u0026 a, Foam::sampleClass\u0026 b); Substract two sampleClass objects; delegates to x members @output-section authors:elwardi\n","categories":"","description":"","excerpt":"namespace Foam { Foam::sampleClass operator-(Foam::sampleClass\u0026 a, …","ref":"/OpenFOAMDocsWebpages/api/doc_lib2__functions/","tags":"","title":"lib2/functions.C"},{"body":"namespace Foam { //=== author:elwardi ===// class sampleClass; } Foam::sampleClass class sampleClass { public: enum class picker; sampleClass(int x); sampleClass(Foam::sampleClass\u0026\u0026) = default; sampleClass(Foam::sampleClass const\u0026) = delete; Foam::sampleClass\u0026 operator=(Foam::sampleClass\u0026\u0026) = default; Foam::sampleClass\u0026 operator=(Foam::sampleClass const\u0026) = delete; ~sampleClass(); int x() const; double operator()(); Foam::sampleClass\u0026 operator++(); Foam::sampleClass operator-(int\u0026); }; Base interface to shape objects. A shape is basically a set of “surface” patches which define regions of closed volumes. Discretization can happen on both sides of these patches if required. @note This is an inline note @warning And an inline warning\nFoam::sampleClass::picker enum class picker { stable, dev }; Enumerating class state !\nstable - When it hasn’t benn changed for a while dev - Actively under development Foam::sampleClass::sampleClass sampleClass(int x); Construct from x\nFoam::sampleClass::sampleClass sampleClass(Foam::sampleClass\u0026\u0026) = default; Default move construction\nFoam::sampleClass::sampleClass sampleClass(Foam::sampleClass const\u0026) = delete; Deleted default copy constructor\nFoam::sampleClass::operator= Foam::sampleClass\u0026 operator=(Foam::sampleClass\u0026\u0026) = default; Default move assignment\nFoam::sampleClass::operator= Foam::sampleClass\u0026 operator=(Foam::sampleClass const\u0026) = delete; Deleted default copyassignment\nFoam::sampleClass::~sampleClass ~sampleClass(); Destructor\nFoam::sampleClass::x int x() const; Const-access to x @return x\nFoam::sampleClass::operator() double operator()(); Run computation @return $k = \\mathbb{R}^{-2.5x}$\nFoam::sampleClass::operator++ Foam::sampleClass\u0026 operator++(); @return A sampleClass with incremented x\nFoam::sampleClass::operator- Foam::sampleClass operator-(int\u0026); Substraction between sampleClass and ints\n","categories":"","description":"","excerpt":"namespace Foam { //=== author:elwardi ===// class sampleClass; } …","ref":"/OpenFOAMDocsWebpages/api/doc_lib2__sampleClass__sampleClass/","tags":"","title":"lib2/sampleClass/sampleClass.H"},{"body":"","categories":"","description":"","excerpt":"","ref":"/OpenFOAMDocsWebpages/api_tags/library/","tags":"","title":"library"},{"body":"No API content is indexed under this file.\n","categories":"","description":"","excerpt":"No API content is indexed under this file.\n","ref":"/OpenFOAMDocsWebpages/api/modules/","tags":"","title":"Modules"},{"body":"Main developer of this toolkit: A CFD enthusiast with passion for software development.\n","categories":"","description":"","excerpt":"Main developer of this toolkit: A CFD enthusiast with passion for …","ref":"/OpenFOAMDocsWebpages/contributors/elwardi/","tags":"","title":"Mohammed Elwardi Fadeli"},{"body":" Your template for documenting OpenFOAM libs Get Started Clone Template OpenFOAM-Docs-Webpages (ODW) provides a simple Hugo template for documentation-focused static-websites tailored specifically\nto document OpenFOAM libraries!\nThe promise is that running a single command will generate an up-to-date documentation\nof the code, both for API section and even unit tests. You can version the docs\nas you version the OpenFOAM code!\nWe do depend on few software packages:\nHugo We’re using Hugo to build the documentation site from Markdown files\nin a blink of an eye (Or faster?)!\nThe website is meant to be hosted on Github Pages, and provides blog,\nAPI and unit tests documentation sections\nalongside a Getting-Started style tutorial hub.\nRead more\nStandardese The API docs are automatically generated using standardese, a next-gen Doxygen-like tool.\nThe actual tool is relatively easy to swap. We’ve tried other tools including\nDoxygen and Hyde but standardese seems to fit our use-case.\nRead more\nfoamUT Docs for unit tests are also automatically generated if you use foamUT\n(Catch2-based) to write your unit tests!\nThis is of course, an optional section of the documentation pipeline but we do\nrecommend that you set up some unit tests for your code anyway!\nRead more\n","categories":"","description":"","excerpt":" Your template for documenting OpenFOAM libs Get Started Clone …","ref":"/OpenFOAMDocsWebpages/","tags":"","title":"ODW"},{"body":" This section presents automatically generated documentation for the project’s API\n","categories":"","description":"","excerpt":" This section presents automatically generated documentation for the …","ref":"/OpenFOAMDocsWebpages/api/","tags":"","title":"Project API"},{"body":"","categories":"","description":"","excerpt":"","ref":"/OpenFOAMDocsWebpages/search/","tags":"","title":"Search Results"},{"body":"","categories":"","description":"","excerpt":"","ref":"/OpenFOAMDocsWebpages/tags/serial/","tags":"","title":"serial"},{"body":"","categories":"","description":"","excerpt":"","ref":"/OpenFOAMDocsWebpages/tags/ui/","tags":"","title":"ui"},{"body":"","categories":"","description":"","excerpt":"","ref":"/OpenFOAMDocsWebpages/adr_tags/ui/ux/","tags":"","title":"ui/ux"},{"body":"This page hosts documentation for all unit tests we run on each commit. Only serial test results are reported for now!\n","categories":"","description":"","excerpt":"This page hosts documentation for all unit tests we run on each …","ref":"/OpenFOAMDocsWebpages/tests/","tags":"","title":"Unit Tests"},{"body":" Note: The unit tests pages are automatically generated from the test reports. Some important points to mention:\nThe random number generator is seeded with the same seed for parallel/serial runs for the same test case. Number of passing tests is the “effective” one (including the ones that fail but are expected to fail)\". Number of failing tests is the “effective” one (only the ones that fail and are not expected to fail)\". Serial unit tests for sampleClass in lib2 library on [cavity] case Tests were performed using Catch2 version 3.6.0 (rng-seed: 882263053) with the following filters: [serial] [cavity] [#sampleClassTests].\n1 Passing test cases (2 expressions), 1 Failing test cases (2 expressions).\noperator()() must return what its docs say it will return Defined in sampleClassTests.C#14\nWith expressions:\nFrom file sampleClassTests.C#22.\nBelonging to the test section scoped as:\n`operator()()` must return what its docs say it will return From file sampleClassTests.C#22.\nBelonging to the test section scoped as:\n`operator()()` must return what its docs say it will return Incrementing a sampleClass object must be reflected on the x member Defined in sampleClassTests.C#25\nWith expressions:\nFrom file sampleClassTests.C#33.\nBelonging to the test section scoped as:\nIncrementing a sampleClass object must be reflected on the x member From file sampleClassTests.C#33.\nBelonging to the test section scoped as:\nIncrementing a sampleClass object must be reflected on the x member ","categories":"","description":"","excerpt":" Note: The unit tests pages are automatically generated from the test …","ref":"/OpenFOAMDocsWebpages/tests/lib2/sampleclasstests/","tags":["cavity","serial","#sampleClassTests"],"title":"Unit tests for lib2 - sampleClass"}]